{"ast":null,"code":"import axios from \"axios\";\nclass UserService {\n  static async login(email, password) {\n    try {\n      const response = await axios.post(`${UserService.BASE_URL}/auth/login`, {\n        email,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  static async register(userData, token) {\n    try {\n      let config = {};\n      if (token) {\n        config.headers = {\n          Authorization: `Bearer ${token}`\n        };\n      }\n      const response = await axios.post(`${UserService.BASE_URL}/auth/register`, userData, config);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  static async getAllUsers(token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/admin/allUser`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  static async getYourProfile(token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/adminuser/get-profile`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  static async getUserById(userId, token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/admin/getUsers/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  static async deleteUser(userId, token) {\n    try {\n      const response = await axios.delete(`${UserService.BASE_URL}/admin/delete/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  static async updateUser(userId, userData, token) {\n    try {\n      const response = await axios.put(`${UserService.BASE_URL}/admin/update/${userId}`, userData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  static logout() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"role\");\n  }\n  static isAuthentication() {\n    const token = localStorage.getItem(\"token\");\n    return !!token;\n  }\n  static isAdmin() {\n    const role = localStorage.getItem(\"role\");\n    return role == \"ADMIN\";\n  }\n  static isUser() {\n    const role = localStorage.getItem(\"role\");\n    return role === \"USER\";\n  }\n  static adminOnly() {\n    return this.isAuthentication() && this.isAdmin();\n  }\n}\nUserService.BASE_URL = \"http://localhost:8080\";\nexport default UserService;","map":{"version":3,"names":["axios","UserService","login","email","password","response","post","BASE_URL","data","error","register","userData","token","config","headers","Authorization","getAllUsers","get","getYourProfile","getUserById","userId","deleteUser","delete","updateUser","put","logout","localStorage","removeItem","isAuthentication","getItem","isAdmin","role","isUser","adminOnly"],"sources":["F:/Git Project/Spring-Boot-Project/foodsite/src/component/Register/UserService.js"],"sourcesContent":["\r\nimport axios from \"axios\"\r\nclass UserService{\r\n    static BASE_URL = \"http://localhost:8080\";\r\n\r\n    static async login(email,password) {\r\n\r\n        try {\r\n            const response = await axios.post(`${UserService.BASE_URL}/auth/login`,{email,password});\r\n            return response.data;\r\n        } catch (error) {\r\n            \r\n            throw error;\r\n        }\r\n    \r\n    }\r\n\r\n    static async register(userData,token){\r\n        \r\n        try {\r\n            let config = {};\r\n\r\n            if(token){\r\n\r\n                config.headers = {Authorization:`Bearer ${token}`};\r\n            }\r\n\r\n            const response = await axios.post(`${UserService.BASE_URL}/auth/register`,userData,config);\r\n            return response.data;\r\n\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async getAllUsers(token){\r\n        try {\r\n            const response = await axios.get(`${UserService.BASE_URL}/admin/allUser`,{\r\n                headers:{Authorization:`Bearer ${token}`},\r\n            });\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async getYourProfile(token){\r\n        try {\r\n            const response = await axios.get(`${UserService.BASE_URL}/adminuser/get-profile`,{\r\n                headers:{Authorization:`Bearer ${token}`},\r\n            });\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async getUserById(userId,token){\r\n        try {\r\n            const response = await axios.get(`${UserService.BASE_URL}/admin/getUsers/${userId}`,{\r\n                headers:{Authorization:`Bearer ${token}`},\r\n            });\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async deleteUser(userId,token){\r\n        try {\r\n            const response = await axios.delete(`${UserService.BASE_URL}/admin/delete/${userId}`,{\r\n                headers:{Authorization:`Bearer ${token}`},\r\n            });\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async updateUser(userId,userData,token){\r\n        try {\r\n            const response = await axios.put(`${UserService.BASE_URL}/admin/update/${userId}`,userData,{\r\n                headers:{Authorization:`Bearer ${token}`},\r\n            });\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static logout(){\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"role\");\r\n    }\r\n\r\n    static isAuthentication(){\r\n        const token = localStorage.getItem(\"token\");\r\n        return !!token;\r\n    }\r\n\r\n    static isAdmin(){\r\n        const role = localStorage.getItem(\"role\");\r\n        return role ==\"ADMIN\";\r\n    }\r\n\r\n    static isUser(){\r\n        const role = localStorage.getItem(\"role\");\r\n        return role === \"USER\";\r\n    }\r\n\r\n    static adminOnly(){\r\n        return this.isAuthentication() && this.isAdmin();\r\n    }\r\n\r\n\r\n}\r\nexport default UserService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}